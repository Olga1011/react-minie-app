{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olgacovali/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utilities/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      currentPage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = this.state.movies;\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        currentPage,\n        pageSize,\n        selectedGenre,\n        sortColumn,\n        movies: allMovies\n      } = this.state;\n      const filtered = (selectedGenre === null || selectedGenre === void 0 ? void 0 : selectedGenre._id) ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      currentPage,\n      pageSize,\n      sortColumn\n    } = this.state;\n\n    if (count === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-italic text-danger\",\n        children: \"There is no movies in the database.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    }\n\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            items: this.state.genres,\n            onItemSelect: this.handleGenreSelect.bind(this),\n            selectedItem: this.state.selectedGenre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"./movies/new\",\n            className: \"btn btn-primary\",\n            style: {\n              marginBottom: 20\n            },\n            children: \"New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Showing \", totalCount, \" movies in the database. \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n            value: searchQuery,\n            onChange: this.handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n            movies: movies,\n            sortColumn: sortColumn,\n            onLike: this.handleLike,\n            onDelete: this.handleDelete,\n            onSort: this.handleSort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          onPageChange: this.handlePageChange,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/olgacovali/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","MoviesTable","Pagination","paginate","ListGroup","getGenres","Link","_","Movies","state","movies","genres","pageSize","currentPage","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","searchQuery","handleSearch","query","selectGenre","handleSort","getPagedData","allMovies","filtered","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","bind","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BU,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,WAAW,EAAE,CAJP;AAKNC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB;AALN,KADqB;;AAAA,SAS7BC,YAT6B,GASbC,KAAD,IAAW;AACxB,YAAMR,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAA0BC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,KAAK,CAACG,GAAhD,CAAf;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAZ4B;;AAAA,SAmB7Ba,UAnB6B,GAmBfL,KAAD,IAAW;AACtB,YAAMR,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,YAAMc,KAAK,GAAGd,MAAM,CAACe,OAAP,CAAeP,KAAf,CAAd;AACAR,MAAAA,MAAM,CAACc,KAAD,CAAN,GAAgB,EAAE,GAAGd,MAAM,CAACc,KAAD;AAAX,OAAhB;AACAd,MAAAA,MAAM,CAACc,KAAD,CAAN,CAAcE,KAAd,GAAsB,CAAChB,MAAM,CAACc,KAAD,CAAN,CAAcE,KAArC;AACA,WAAKJ,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAzB4B;;AAAA,SA2B7BiB,gBA3B6B,GA2BTC,IAAD,IAAU;AAC3B,WAAKN,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEe;AAAf,OAAd;AACD,KA7B4B;;AAAA,SA+B7BC,iBA/B6B,GA+BRC,KAAD,IAAW;AAC7B,WAAKR,QAAL,CAAc;AAAES,QAAAA,aAAa,EAAED,KAAjB;AAAwBE,QAAAA,WAAW,EAAE,EAArC;AAAyCnB,QAAAA,WAAW,EAAE;AAAtD,OAAd;AACD,KAjC4B;;AAAA,SAmC7BoB,YAnC6B,GAmCbC,KAAD,IAAW;AACxB,WAAKZ,QAAL,CAAc;AAAEU,QAAAA,WAAW,EAAEE,KAAf;AAAsBC,QAAAA,WAAW,EAAE,IAAnC;AAAyCtB,QAAAA,WAAW,EAAE;AAAtD,OAAd;AACD,KArC4B;;AAAA,SAuC7BuB,UAvC6B,GAuCftB,UAAD,IAAgB;AAC3B,WAAKQ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAzC4B;;AAAA,SA0C7BuB,YA1C6B,GA0Cd,MAAM;AACnB,YAAM;AACJxB,QAAAA,WADI;AAEJD,QAAAA,QAFI;AAGJmB,QAAAA,aAHI;AAIJjB,QAAAA,UAJI;AAKJJ,QAAAA,MAAM,EAAE4B;AALJ,UAMF,KAAK7B,KANT;AAQA,YAAM8B,QAAQ,GAAG,CAAAR,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEV,GAAf,IACbiB,SAAS,CAACnB,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACU,KAAF,CAAQT,GAAR,KAAgBU,aAAa,CAACV,GAAtD,CADa,GAEbiB,SAFJ;;AAIA,YAAME,MAAM,GAAGjC,CAAC,CAACkC,OAAF,CAAUF,QAAV,EAAoB,CAACzB,UAAU,CAACC,IAAZ,CAApB,EAAuC,CAACD,UAAU,CAACE,KAAZ,CAAvC,CAAf;;AAEA,YAAMN,MAAM,GAAGP,QAAQ,CAACqC,MAAD,EAAS3B,WAAT,EAAsBD,QAAtB,CAAvB;AACA,aAAO;AAAE8B,QAAAA,UAAU,EAAEH,QAAQ,CAACI,MAAvB;AAA+BC,QAAAA,IAAI,EAAElC;AAArC,OAAP;AACD,KA3D4B;AAAA;;AAc7BmC,EAAAA,iBAAiB,GAAG;AAClB,UAAMlC,MAAM,GAAG,CAAC;AAAEU,MAAAA,GAAG,EAAE,EAAP;AAAWyB,MAAAA,IAAI,EAAE;AAAjB,KAAD,EAAkC,GAAGzC,SAAS,EAA9C,CAAf;AACA,SAAKiB,QAAL,CAAc;AAAEZ,MAAAA,MAAM,EAAEV,SAAS,EAAnB;AAAuBW,MAAAA;AAAvB,KAAd;AACD;;AA4CDoC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,MAAM,EAAEK;AAAV,QAAoB,KAAKvC,KAAL,CAAWC,MAArC;AACA,UAAM;AAAEG,MAAAA,WAAF;AAAeD,MAAAA,QAAf;AAAyBE,MAAAA;AAAzB,QAAwC,KAAKL,KAAnD;;AAEA,QAAIuC,KAAK,KAAK,CAAd,EAAiB;AACf,0BACE;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,UAAM;AAAEN,MAAAA,UAAF;AAAcE,MAAAA,IAAI,EAAElC;AAApB,QAA+B,KAAK2B,YAAL,EAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWE,MADpB;AAEE,YAAA,YAAY,EAAE,KAAKkB,iBAAL,CAAuBoB,IAAvB,CAA4B,IAA5B,CAFhB;AAGE,YAAA,YAAY,EAAE,KAAKxC,KAAL,CAAWsB;AAH3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,cADL;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,KAAK,EAAE;AAAEmB,cAAAA,YAAY,EAAE;AAAhB,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,mCAAYR,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEV,WAAlB;AAA+B,YAAA,QAAQ,EAAE,KAAKC;AAA9C;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE,QAAC,WAAD;AACE,YAAA,MAAM,EAAEvB,MADV;AAEE,YAAA,UAAU,EAAEI,UAFd;AAGE,YAAA,MAAM,EAAE,KAAKS,UAHf;AAIE,YAAA,QAAQ,EAAE,KAAKN,YAJjB;AAKE,YAAA,MAAM,EAAE,KAAKmB;AALf;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,UAAU,EAAEM,UADd;AAEE,UAAA,QAAQ,EAAE9B,QAFZ;AAGE,UAAA,YAAY,EAAE,KAAKe,gBAHrB;AAIE,UAAA,WAAW,EAAEd;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyCD;;AAnH4B;;AAsH/B,eAAeL,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utilities/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleLike = (movie) => {\n    const movies = this.state.movies;\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  getPagedData = () => {\n    const {\n      currentPage,\n      pageSize,\n      selectedGenre,\n      sortColumn,\n      movies: allMovies,\n    } = this.state;\n\n    const filtered = selectedGenre?._id\n      ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n      : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { currentPage, pageSize, sortColumn } = this.state;\n\n    if (count === 0) {\n      return (\n        <p className=\"font-italic text-danger\">\n          There is no movies in the database.\n        </p>\n      );\n    }\n\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <ListGroup\n              items={this.state.genres}\n              onItemSelect={this.handleGenreSelect.bind(this)}\n              selectedItem={this.state.selectedGenre}\n            />\n          </div>\n\n          <div className=\"col\">\n            <Link\n              to=\"./movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n            <p>Showing {totalCount} movies in the database. </p>\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\n            <MoviesTable\n              movies={movies}\n              sortColumn={sortColumn}\n              onLike={this.handleLike}\n              onDelete={this.handleDelete}\n              onSort={this.handleSort}\n            />\n          </div>\n        </div>\n\n        <div>\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}