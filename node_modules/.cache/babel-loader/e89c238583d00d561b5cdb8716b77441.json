{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\nhttp.setJwt(getJwt());\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logout(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n} // eslint-disable-next-line\n\nexport default {\n  login,\n  logWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};","map":{"version":3,"sources":["/Users/olgacovali/vidly/src/services/authService.js"],"names":["jwtDecode","http","apiUrl","apiEndpoint","tokenKey","setJwt","getJwt","login","email","password","data","jwt","post","localStorage","setItem","logWithJwt","logout","getCurrentUser","getItem","ex"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,WAAW,GAAGD,MAAM,GAAG,OAA7B;AACA,MAAME,QAAQ,GAAG,OAAjB;AAEAH,IAAI,CAACI,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMV,IAAI,CAACW,IAAL,CAAUT,WAAV,EAAuB;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAvB,CAA5B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASI,UAAT,CAAoBJ,GAApB,EAAyB;AAC9BE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASK,MAAT,CAAgBL,GAAhB,EAAqB;AAC1BE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASM,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMN,GAAG,GAAGE,YAAY,CAACK,OAAb,CAAqBd,QAArB,CAAZ;AACA,WAAOJ,SAAS,CAACW,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOQ,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASb,MAAT,GAAkB;AACvB,SAAOO,YAAY,CAACK,OAAb,CAAqBd,QAArB,CAAP;AACD,C,CAED;;AACA,eAAe;AACbG,EAAAA,KADa;AAEbQ,EAAAA,UAFa;AAGbC,EAAAA,MAHa;AAIbC,EAAAA,cAJa;AAKbX,EAAAA;AALa,CAAf","sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\n// eslint-disable-next-line\nexport default {\n  login,\n  logWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n"]},"metadata":{},"sourceType":"module"}